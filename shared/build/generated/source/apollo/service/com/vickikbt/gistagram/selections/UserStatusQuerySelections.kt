//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.1.0'.
//
package com.vickikbt.gistagram.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.notNull
import com.vickikbt.gistagram.type.GraphQLBoolean
import com.vickikbt.gistagram.type.GraphQLID
import com.vickikbt.gistagram.type.GraphQLString
import com.vickikbt.gistagram.type.Repository
import com.vickikbt.gistagram.type.URI
import com.vickikbt.gistagram.type.User
import kotlin.collections.List

public object UserStatusQuerySelections {
  private val repository: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "isEmpty",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "url",
          type = URI.type.notNull()
        ).build()
      )

  private val viewer: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "login",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "avatarUrl",
          type = URI.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "repository",
          type = Repository.type
        ).arguments(listOf(
          CompiledArgument("name", CompiledVariable("userLogin"))
        ))
        .selections(repository)
        .build()
      )

  public val root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "viewer",
          type = User.type.notNull()
        ).selections(viewer)
        .build()
      )
}
